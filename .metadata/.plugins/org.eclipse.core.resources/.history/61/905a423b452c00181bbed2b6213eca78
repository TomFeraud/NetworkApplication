package Coursework;

import java.io.IOException;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import javax.servlet.http.Part;

@SuppressWarnings("serial")
public class TestFILE extends HttpServlet {
	public static final String ATT_USER = "mailContent";
	public static final String ATT_FORM = "form";
	public static final String VUE = "/WEB-INF/testfile.jsp";
	// TEST SMTP
	public static final String VUE_FAIL = "/WEB-INF/testfile.jsp";
	public static final String VUE_SUCCESS = "/WEB-INF/testSuccess.jsp";
	// TEST FILE
	//public static final String CHAMP_FICHIER = "file";

	public void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		//Display the "send mail" interface
		this.getServletContext().getRequestDispatcher(VUE).forward(request, response);
	}

	public void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		
		MailForm form = new MailForm();
		MailContent mailContent = form.setupMail(request);

		// TEST FILE
		//Part part = request.getPart(CHAMP_FICHIER);
		//String nomFichier = getNomFichier(part);
		
		/*
		 * Si la méthode a renvoyé quelque chose, il s'agit donc d'un champ de type
		 * fichier (input type="file").
		 */
		//
		//if (nomFichier != null && !nomFichier.isEmpty()) {
			//String nomChamp = part.getName();
			//request.setAttribute(nomChamp, nomFichier);
		//}

		/* Stockage du formulaire et du bean dans l'objet request */
		request.setAttribute(ATT_FORM, form);
		request.setAttribute(ATT_USER, mailContent);

		if (form.getResultat().equalsIgnoreCase("Success")) {
			this.getServletContext().getRequestDispatcher(VUE_SUCCESS).forward(request, response);
			@SuppressWarnings("unused")
			SMTP testSMTP = new SMTP(mailContent);
		} else {
			this.getServletContext().getRequestDispatcher(VUE_FAIL).forward(request, response);
		}

	}

	private static String getNomFichier(Part part) {
		/* Boucle sur chacun des paramètres de l'en-tête "content-disposition". */
		for (String contentDisposition : part.getHeader("content-disposition").split(";")) {
			/* Recherche de l'éventuelle présence du paramètre "filename". */
			if (contentDisposition.trim().startsWith("filename")) {
				/*
				 * Si "filename" est présent, alors renvoi de sa valeur, c'est-à-dire du nom de
				 * fichier.
				 */
				return contentDisposition.substring(contentDisposition.indexOf('=') + 1).trim().replace("\"", "");
			}
		}
		/* Et pour terminer, si rien n'a été trouvé... */
		return null;
	}
}
